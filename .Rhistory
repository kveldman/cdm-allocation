library(readxl)
Copy_of_CDM_DEFEND_Staffing_Matrix_MASTER <- read_excel("C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/Attachments/Copy of CDM_DEFEND_Staffing Matrix_MASTER.xlsx")
View(Copy_of_CDM_DEFEND_Staffing_Matrix_MASTER)
View(Copy_of_CDM_DEFEND_Staffing_Matrix_MASTER)
View(Copy_of_CDM_DEFEND_Staffing_Matrix_MASTER)
library(readxl)
StaffingWidgetTestSet <- read_excel("C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/StaffingWidgetTestSet.xlsx")
View(StaffingWidgetTestSet)
View(StaffingWidgetTestSet)
library(readxl)
StaffingWidgetTestSet <- read_excel("C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/StaffingWidgetTestSet.xlsx")
View(StaffingWidgetTestSet)
library(readxl)
StaffingWidgetTestSet1 <- read_excel("C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/StaffingWidgetTestSet1.xlsx",
col_types = c("text", "text", "text",
"text", "text", "text", "text", "text",
"text", "text", "date", "numeric",
"text", "text", "text", "text", "text",
"text", "text", "numeric", "numeric",
"numeric", "numeric", "date", "text",
"text", "date", "date", "date", "date",
"date", "date", "date", "date", "date",
"date", "text", "text", "text", "text",
"text", "text", "text"))
View(StaffingWidgetTestSet1)
library(shiny)
install.packages("shiny")
library(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server))
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/WilliamsShinyApp.R')
install.packages("caret")
shiny::runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
StaffingWidgetTestSet1$`Full Name`
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
?as.data.frame
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
?conditionalPanel
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
?is.na
is.na(StaffingWidgetTestSet1[1,4])
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
StaffingWidgetTestSet1$complete <- is.na(StaffingWidgetTestSet1$PIVCardRecieved)
StaffingWidgetTestSet1$complete[i] <- is.na(StaffingWidgetTestSet1$PIVCardRecieved[i])
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
for(i in 1:length(StaffingWidgetTestSet1$FullName)){
StaffingWidgetTestSet1$complete[i] <- is.na(StaffingWidgetTestSet1$PIVCardRecieved[i])
}
View(StaffingWidgetTestSet1)
length(StaffingWidgetTestSet1$`Full Name`)
for(i in 1:length(StaffingWidgetTestSet1$'Full Name')){
StaffingWidgetTestSet1$complete[i] <- is.na(StaffingWidgetTestSet1$PIVCardRecieved[i])
}
for(i in 1:(length(StaffingWidgetTestSet1$'Full Name'))){
StaffingWidgetTestSet1$complete[i] <- is.na(StaffingWidgetTestSet1$PIVCardRecieved[i])
}
View(StaffingWidgetTestSet1)
StaffingWidgetTestSet1$complete <- 0
for(i in 1:(length(StaffingWidgetTestSet1$'Full Name'))){
StaffingWidgetTestSet1$complete[i] <- is.na(StaffingWidgetTestSet1$PIVCardRecieved[i])
}
View(StaffingWidgetTestSet1)
i=1
StaffingWidgetTestSet1$complete[i] <- is.na(StaffingWidgetTestSet1$PIVCardRecieved[i]
StaffingWidgetTestSet1$complete[i] <- is.na(StaffingWidgetTestSet1$PIVCardRecieved[i])
StaffingWidgetTestSet1$complete[i]
is.na(StaffingWidgetTestSet1$PIVCardRecieved[i])
StaffingWidgetTestSet1$`PIV Card Received`[i]
for(i in 1:(length(StaffingWidgetTestSet1$'Full Name'))){
StaffingWidgetTestSet1$complete[i] <- is.na(StaffingWidgetTestSet1$'PIV Card Recieved'[i])
}
is.na(StaffingWidgetTestSet1$`PIV Card Received`[i])
StaffingWidgetTestSet1$complete[i] <- is.na(StaffingWidgetTestSet1$'PIV Card Recieved'[i])
StaffingWidgetTestSet1$complete[i] <- is.na(StaffingWidgetTestSet1$`PIV Card Received`[i])
StaffingWidgetTestSet1$complete[i] <- is.na(StaffingWidgetTestSet1$`PIV Card Received`[i])
StaffingWidgetTestSet1$complete[i] <- 5
View(StaffingWidgetTestSet1)
StaffingWidgetTestSet1$complete[i] <- is.na(StaffingWidgetTestSet1$`PIV Card Received`[i])
View(StaffingWidgetTestSet1)
StaffingWidgetTestSet1$complete[i] <- FALSE
View(StaffingWidgetTestSet1)
StaffingWidgetTestSet1$complete[i] <- TRUE
View(StaffingWidgetTestSet1)
for(i in 1:(length(StaffingWidgetTestSet1$'Full Name'))){
StaffingWidgetTestSet1$complete[i] <- is.na(StaffingWidgetTestSet1$'PIV Card Recieved'[i])
}
StaffingWidgetTestSet1$complete <-ifelse(is.na(StaffingWidgetTestSet1$`PIV Card Received`))==TRUE,0,1)
StaffingWidgetTestSet1$complete <-ifelse(is.na(StaffingWidgetTestSet1$`PIV Card Received`)==TRUE,0,1)
View(StaffingWidgetTestSet1)
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
set=read.csv("C:\\Users\\591548\\OneDrive - BOOZ ALLEN & HAMILTON\\CDM Staffing\\StaffingWidgetTestSet1.csv")
View(set)
suitability_set <- set
suitability_set$complete <- ifelse(is.na(suitability_set$PIVCardReceived)==TRUE,0,1)
View(suitability_set)
?read.csv
suitability_set <- set
suitability_set$complete <- ifelse(suitability_set$PIVCardReceived=="",0,1)
View(suitability_set)
if(input$In_complete == 1){
suitability_set <- suitability_set[which(suitability_set$complete==0),]}
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
shiny::runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
shiny::runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
c("All",'Agency & Test Integration Engineer','Agency Lead','Agency Test & Integration Engineer','BigFix Engineer','Capability Engineer - Archer','Capability Engineer - BF',"Capability Engineer - FS",'Capability Engineer - RES','Change and Release Management','Chief Engineer','Cloud and Mobile Capability Lead','Cloud Security Engineer','Configuration/Data Management Analyst','Cyber Architect','Data Integration Engineer','Data Integration Lead','Data Integration Team Lead','Data Integration Technical Lead','Data Presentation Capability Engineer','Data Presentation Capability Lead','Data Protection Capability Lead','Delivery Manager','Deployment Coordinator','Deputy PM - 2Delta','Deputy PM - DEFEND B','Deputy SA Manager', 'Deputy SIO','DI Developer','Endpoint Security Capability Lead','Engineering Capability Deputy','Engineering Capability Lead','Engineering Resource Lead','Executive Assistant','Finance Manager','Governance & Training Lead','Governance Analyst','IA Engineer','IA Engineer - DOI/DOE','IA Engineer - EOP/VA','IA Engineer - OPM/USDA', 'IA Lead','IA SME','IDAM and PAM Capability Lead','Incident Lead','Incident Response Analyst','Incident Response Lead','Incident Support','Information Assurance Lead','Integration Lead - DOI','Integration Lead - DOT/FAA','Integration Lead - EOP/VA', 'Integration Lead - GSA','Integration Lead - HHS','Integration Lead - NASA','Integration Lead - OPM','Integration Lead - Treasury','Integration Lead - USDA','IOS Engineer - Archer','IOS Engineer - BF','IOS Engineer - FS','IOS Engineer - IP360','IOS Engineer - Splunk','IOS Lead','IOS Project Coordinator','IOSÂ Engineer','ITSM Lead CSI','Lab Architect','Lab Manager','Lab Support','Lead Systems Integration Manager','NASA Surge Support','Ongoing Assessment Lead','Ongoing Assessment Manager','PBS Lead - 2Bravo','PBS Lead - 2Delta','PBS Lead - DEFEND Bravo','PBS Support','Perimeter Defense Capability Lead','PMO Support','Procurement Analyst','Procurement Lead','Procurement Support','Product Owner','Program Manager - Delta','Project Coordinator','Project Coordinator Lead','Project Expediter','Project Operations Lead - DEFEND Bravo','Project Operations Lead - Delta','Quality Assurance Metrics Lead','Quality Lead','Requirements Analyst','Requirements Lead','Resource Lead','Resource Support','RFS OAS PM','RFS Portfolio Manager','RFS Response Lead','RFS Support','Scheduler','SDD Manager','ServiceNow Capability Lead','ServiceNow Developer','ServiceNow Engineer','SIO Manager','SME','Solution Architect','Solution Architecture Lead','Solution Assurance Manager','Solutions Architect','SubKs','Tech Writer','Test Engineer','Tester','Testing Lead','Threat Analyst','Training Lead','Transition-In Support','Vulnerability Manager'
)
functional_roles=c("All",'Agency & Test Integration Engineer','Agency Lead','Agency Test & Integration Engineer','BigFix Engineer','Capability Engineer - Archer','Capability Engineer - BF',"Capability Engineer - FS",'Capability Engineer - RES','Change and Release Management','Chief Engineer','Cloud and Mobile Capability Lead','Cloud Security Engineer','Configuration/Data Management Analyst','Cyber Architect','Data Integration Engineer','Data Integration Lead','Data Integration Team Lead','Data Integration Technical Lead','Data Presentation Capability Engineer','Data Presentation Capability Lead','Data Protection Capability Lead','Delivery Manager','Deployment Coordinator','Deputy PM - 2Delta','Deputy PM - DEFEND B','Deputy SA Manager', 'Deputy SIO','DI Developer','Endpoint Security Capability Lead','Engineering Capability Deputy','Engineering Capability Lead','Engineering Resource Lead','Executive Assistant','Finance Manager','Governance & Training Lead','Governance Analyst','IA Engineer','IA Engineer - DOI/DOE','IA Engineer - EOP/VA','IA Engineer - OPM/USDA', 'IA Lead','IA SME','IDAM and PAM Capability Lead','Incident Lead','Incident Response Analyst','Incident Response Lead','Incident Support','Information Assurance Lead','Integration Lead - DOI','Integration Lead - DOT/FAA','Integration Lead - EOP/VA', 'Integration Lead - GSA','Integration Lead - HHS','Integration Lead - NASA','Integration Lead - OPM','Integration Lead - Treasury','Integration Lead - USDA','IOS Engineer - Archer','IOS Engineer - BF','IOS Engineer - FS','IOS Engineer - IP360','IOS Engineer - Splunk','IOS Lead','IOS Project Coordinator','IOSÂ Engineer','ITSM Lead CSI','Lab Architect','Lab Manager','Lab Support','Lead Systems Integration Manager','NASA Surge Support','Ongoing Assessment Lead','Ongoing Assessment Manager','PBS Lead - 2Bravo','PBS Lead - 2Delta','PBS Lead - DEFEND Bravo','PBS Support','Perimeter Defense Capability Lead','PMO Support','Procurement Analyst','Procurement Lead','Procurement Support','Product Owner','Program Manager - Delta','Project Coordinator','Project Coordinator Lead','Project Expediter','Project Operations Lead - DEFEND Bravo','Project Operations Lead - Delta','Quality Assurance Metrics Lead','Quality Lead','Requirements Analyst','Requirements Lead','Resource Lead','Resource Support','RFS OAS PM','RFS Portfolio Manager','RFS Response Lead','RFS Support','Scheduler','SDD Manager','ServiceNow Capability Lead','ServiceNow Developer','ServiceNow Engineer','SIO Manager','SME','Solution Architect','Solution Architecture Lead','Solution Assurance Manager','Solutions Architect','SubKs','Tech Writer','Test Engineer','Tester','Testing Lead','Threat Analyst','Training Lead','Transition-In Support','Vulnerability Manager'
)
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
suitability_set[which(grep(Burton,suitability_set$FullName,ignore.case = TRUE)==TRUE),]
suitability_set[which(grepl(Burton,suitability_set$FullName,ignore.case = TRUE)==TRUE),]
suitability_set[which(grepl("Burton",suitability_set$FullName,ignore.case = TRUE)==TRUE),]
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
suitability_set[which(grepl(as.character(Burton),suitability_set$FullName,ignore.case = TRUE)==TRUE),]
search = "Burton"
suitability_set[which(grepl(search,suitability_set$FullName,ignore.case = TRUE)==TRUE),]
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
test1 <- suitability_set[which(grepl(search,suitability_set$FullName,ignore.case = TRUE)==TRUE),]
View(test1)
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM Staffing/Dummy')
shiny::runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
View(suitability_set)
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
shiny::runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
shiny::runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
shiny::runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
colnames(set)
View(StaffingWidgetTestSet1)
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
shiny::runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
shiny::runApp('C:/Users/591548/OneDrive - BOOZ ALLEN & HAMILTON/CDM DEFEND D/CDM Staffing/CDM_DEFEND_D_Staffing_Widget')
shiny::runApp('C:/Users/591548/OneDrive - BOOZ ALLEN HAMILTON/CDM DEFEND/CDM Staffing/CDM DEFEND Resource Allocation/cdm-allocation-differentDataStructure/cdm-allocation-differentDataStructure')
library(shinyBS)
runApp('C:/Users/591548/OneDrive - BOOZ ALLEN HAMILTON/CDM DEFEND/CDM Staffing/CDM DEFEND Resource Allocation/cdm-allocation-differentDataStructure/cdm-allocation-differentDataStructure')
?unique
# Import more accurate Demographic Information from the Staffing Matrix subset
DemographicMapping <- read.table("CDM Staffing Matrix for ITSM.txt", header = TRUE, fill = TRUE, stringsAsFactors=FALSE, sep="\t")
names(DemographicMapping) <- c("Company","ID","Last_Name","First_Name","CDM_Start_Date","End_Date","Task_Order","Workstream","Org","Team","Functional_Role","Bravo_LCAT","Delta_LCAT")
# Change the below commented code if the working directory is a different folder from the current folder
setwd("C:/Users/591548/OneDrive - BOOZ ALLEN HAMILTON/CDM DEFEND/CDM Staffing/CDM DEFEND Resource Allocation/cdm-allocation")
# Import more accurate Demographic Information from the Staffing Matrix subset
DemographicMapping <- read.table("CDM Staffing Matrix for ITSM.txt", header = TRUE, fill = TRUE, stringsAsFactors=FALSE, sep="\t")
names(DemographicMapping) <- c("Company","ID","Last_Name","First_Name","CDM_Start_Date","End_Date","Task_Order","Workstream","Org","Team","Functional_Role","Bravo_LCAT","Delta_LCAT")
unique(DemographicMapping$Functional_Role)
unique(DemographicMapping$Org)
unique(c(DemographicMapping$Bravo_LCAT,DemographicMapping$Delta_LCAT))
shiny::runApp()
